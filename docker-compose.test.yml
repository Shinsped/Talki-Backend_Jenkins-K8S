version: '3.8'

services:
  # Test MySQL Database
  mysql:
    image: mysql:8.0
    container_name: talki-test-mysql
    environment:
      MYSQL_ROOT_PASSWORD: testpassword
      MYSQL_DATABASE: talki_test_db
      MYSQL_USER: test_user
      MYSQL_PASSWORD: test_password
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3307:3306"
    volumes:
      - test_mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - talki-test-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ptestpassword"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 30s
    restart: "no"

  # Test Kafka (with Zookeeper)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: talki-test-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - talki-test-network
    restart: "no"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: talki-test-kafka
    depends_on:
      - zookeeper
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - talki-test-network
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      timeout: 10s
      retries: 5
      interval: 10s
      start_period: 30s
    restart: "no"

  # Test Application (for integration tests)
  talki-test-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: talki/talki-application:test
    container_name: talki-test-application
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8081:8080"
      - "9091:9090"
    environment:
      SPRING_PROFILES_ACTIVE: test
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/talki_test_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
      SPRING_DATASOURCE_USERNAME: test_user
      SPRING_DATASOURCE_PASSWORD: test_password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      GRPC_SERVER_PORT: 9090
      SERVER_PORT: 8080
      JAVA_OPTS: "-Xmx256m -Xms128m"
    volumes:
      - test_app_logs:/app/logs
    networks:
      - talki-test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      timeout: 10s
      retries: 5
      interval: 10s
      start_period: 60s
    restart: "no"

volumes:
  test_mysql_data:
    driver: local
  test_app_logs:
    driver: local

networks:
  talki-test-network:
    driver: bridge

